name: Build and Deploy to GKE

on:
  push:
    branches: [ "dev" ]

env:
  GAR_LOCATION: northamerica-northeast1
  GKE_CLUSTER: civviebot-cluster
  GKE_ZONE: northamerica-northeast1
  CIVVIEBOT_DB_DIALECT: ${{ secrets.CIVVIEBOT_DB_DIALECT }}
  CIVVIEBOT_DB_DRIVER: ${{ secrets.CIVVIEBOT_DB_DRIVER }}
  CIVVIEBOT_DB_URL_USERNAME: ${{ secrets.CIVVIEBOT_DB_URL_USERNAME }}
  CIVVIEBOT_DB_URL_PASSWORD: ${{ secrets.CIVVIEBOT_DB_URL_PASSWORD }}
  CIVVIEBOT_DB_URL_DATABASE: ${{ secrets.CIVVIEBOT_DB_URL_DATABASE }}
  CIVVIEBOT_DB_URL_HOST: ${{ secrets.CIVVIEBOT_DB_URL_HOST }}
  CIVVIEBOT_DB_URL_PORT: ${{ secrets.CIVVIEBOT_DB_URL_PORT }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}

jobs:
  deploy-to-gke:
    name: Deploy to GKE
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      packages: 'write'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
      with:
        cosign-release: 'v1.13.1'

    # Workaround: https://github.com/docker/build-push-action/issues/461
    - name: Setup Docker buildx
      uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

    # https://github.com/docker/login-action
    - name: Log into registry ghcr.io
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/civviebot

    # Build the Docker image
    - name: Build
      run: |-
        docker build -t docker.pkg.github.com/${{ github.repository }}/civviebot:${{ github.sha }} .

    - name: Log in to GitHub Packages
      run: |-
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push Docker image to GitHub Packages
      run: |-
        docker push docker.pkg.github.com/${{ github.repository }}/civviebot:${{ github.sha }}

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/516245687605/locations/global/workloadIdentityPools/civviebot/providers/civviebot-provider'
        service_account: 'civviebot-deploy@smart-processor-373519.iam.gserviceaccount.com'

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image civviebot=ghcr.io/${{ github.repository }}/civviebot:${{ github.sha }}
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/db
        kubectl rollout status deployment/api
        kubectl rollout status deployment/bot
        kubectl get services -o wide
