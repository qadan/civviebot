name: Build and Deploy to GKE

on:
  push:
    branches: [ "dev" ]

env:
  GAR_LOCATION: northamerica-northeast1
  GKE_CLUSTER: civviebot-cluster
  GKE_ZONE: northamerica-northeast1
  CIVVIEBOT_DB_DIALECT: ${{ secrets.CIVVIEBOT_DB_DIALECT }}
  CIVVIEBOT_DB_DRIVER: ${{ secrets.CIVVIEBOT_DB_DRIVER }}
  CIVVIEBOT_DB_URL_USERNAME: ${{ secrets.CIVVIEBOT_DB_URL_USERNAME }}
  CIVVIEBOT_DB_URL_PASSWORD: ${{ secrets.CIVVIEBOT_DB_URL_PASSWORD }}
  CIVVIEBOT_DB_URL_DATABASE: ${{ secrets.CIVVIEBOT_DB_URL_DATABASE }}
  CIVVIEBOT_DB_URL_HOST: ${{ secrets.CIVVIEBOT_DB_URL_HOST }}
  CIVVIEBOT_DB_URL_PORT: ${{ secrets.CIVVIEBOT_DB_URL_PORT }}
  DISCORD_CLIENT_ID: ${{ secrets.DISCORD_CLIENT_ID }}
  DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/516245687605/locations/global/workloadIdentityPools/civviebot/providers/civviebot-provider'
        service_account: 'civviebot-deploy@smart-processor-373519.iam.gserviceaccount.com'

    - name: Docker configuration
      run: |-
        echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev

    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}

    # Start minikube
    - name: Start minikube
      uses: medyagh/setup-minikube@master

    # Build the Docker image
    - name: Build
      run: |-
        eval $(minikube -p minikube docker-env)
        docker build --tag "$GITHUB_SHA" .

    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        # replacing the image name in the k8s template
        ./kustomize edit set image civviebot=civviebot:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/db
        kubectl rollout status deployment/api
        kubectl rollout status deployment/bot
        kubectl get services -o wide
